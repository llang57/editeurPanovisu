name: 📖 Générer et publier Javadoc

on:
  push:
    branches: [ master ]
    paths:
      - 'src/**/*.java'
      - '.github/workflows/javadoc.yml'
  workflow_dispatch:
    inputs:
      force:
        description: 'Forcer la publication'
        required: false
        default: 'false'

permissions:
  contents: read
  pages: write
  id-token: write

# Permettre un seul déploiement concurrent
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout du code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: ☕ Configuration Java 25
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '25'
        cache: 'maven'
    
    - name: 📚 Générer Javadoc avec Maven
      run: |
        echo "🔧 Génération de la Javadoc..."
        mvn javadoc:javadoc -DskipTests
        
        # Détecter le répertoire de sortie
        if [ -d "target/reports/apidocs" ]; then
          JAVADOC_DIR="target/reports/apidocs"
        elif [ -d "target/site/apidocs" ]; then
          JAVADOC_DIR="target/site/apidocs"
        elif [ -d "target/apidocs" ]; then
          JAVADOC_DIR="target/apidocs"
        else
          echo "❌ Erreur : Aucun répertoire Javadoc trouvé !"
          find target -type d -name "apidocs" || echo "Aucun apidocs trouvé"
          exit 1
        fi
        
        echo "✅ Javadoc générée dans : $JAVADOC_DIR"
        
        # Vérifier que index.html existe
        if [ ! -f "$JAVADOC_DIR/index.html" ]; then
          echo "❌ Erreur : index.html manquant dans $JAVADOC_DIR"
          exit 1
        fi
        
        # Créer .nojekyll pour désactiver Jekyll
        touch "$JAVADOC_DIR/.nojekyll"
        
        # Afficher les statistiques
        echo "📊 Statistiques de la Javadoc :"
        echo "   - Fichiers HTML : $(find $JAVADOC_DIR -name '*.html' | wc -l)"
        echo "   - Taille totale : $(du -sh $JAVADOC_DIR | cut -f1)"
        
        # Copier pour le déploiement
        mkdir -p _site
        cp -r "$JAVADOC_DIR"/* _site/
    
    - name: 📝 Créer page d'accueil
      run: |
        cat > _site/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="fr">
        <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Documentation EditeurPanovisu</title>
          <meta http-equiv="refresh" content="0; url=./index.html">
          <style>
            body {
              font-family: system-ui, -apple-system, sans-serif;
              display: flex;
              justify-content: center;
              align-items: center;
              min-height: 100vh;
              margin: 0;
              background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
              color: white;
            }
            .container {
              text-align: center;
              padding: 2rem;
            }
            h1 { font-size: 2.5rem; margin-bottom: 1rem; }
            p { font-size: 1.2rem; opacity: 0.9; }
            .spinner {
              border: 4px solid rgba(255,255,255,0.3);
              border-top: 4px solid white;
              border-radius: 50%;
              width: 40px;
              height: 40px;
              animation: spin 1s linear infinite;
              margin: 2rem auto;
            }
            @keyframes spin {
              0% { transform: rotate(0deg); }
              100% { transform: rotate(360deg); }
            }
          </style>
        </head>
        <body>
          <div class="container">
            <h1>📖 Javadoc EditeurPanovisu</h1>
            <div class="spinner"></div>
            <p>Redirection en cours...</p>
          </div>
        </body>
        </html>
        EOF
    
    - name: � Upload artifact pour GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site'

  # Job de déploiement
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: 🚀 Déployer sur GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: ✅ Publication réussie
      run: |
        echo "✅ Javadoc publiée avec succès !"
        echo "📖 Accessible à : ${{ steps.deployment.outputs.page_url }}"
