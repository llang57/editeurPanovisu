name: 📖 Générer et publier Javadoc

on:
  push:
    branches: [ master ]
    paths:
      - 'src/**/*.java'
      - '.github/workflows/javadoc.yml'
  workflow_dispatch:
    inputs:
      force:
        description: 'Forcer la publication'
        required: false
        default: 'false'

permissions:
  contents: read
  pages: write
  id-token: write

# Permettre un seul déploiement concurrent
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout du code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: ☕ Configuration Java 25
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '25'
        cache: 'maven'
    
    - name: 📚 Générer Javadoc avec Maven
      run: |
        echo "🔧 Génération de la Javadoc..."
        mvn javadoc:javadoc -DskipTests
        
        # Détecter le répertoire de sortie
        if [ -d "target/reports/apidocs" ]; then
          JAVADOC_DIR="target/reports/apidocs"
        elif [ -d "target/site/apidocs" ]; then
          JAVADOC_DIR="target/site/apidocs"
        elif [ -d "target/apidocs" ]; then
          JAVADOC_DIR="target/apidocs"
        else
          echo "❌ Erreur : Aucun répertoire Javadoc trouvé !"
          find target -type d -name "apidocs" || echo "Aucun apidocs trouvé"
          exit 1
        fi
        
        echo "✅ Javadoc générée dans : $JAVADOC_DIR"
        
        # Vérifier que index.html existe
        if [ ! -f "$JAVADOC_DIR/index.html" ]; then
          echo "❌ Erreur : index.html manquant dans $JAVADOC_DIR"
          exit 1
        fi
        
        # Créer .nojekyll pour désactiver Jekyll
        touch "$JAVADOC_DIR/.nojekyll"
        
        # Afficher les statistiques
        echo "📊 Statistiques de la Javadoc :"
        echo "   - Fichiers HTML : $(find $JAVADOC_DIR -name '*.html' | wc -l)"
        echo "   - Taille totale : $(du -sh $JAVADOC_DIR | cut -f1)"
        
        # Copier pour le déploiement
        mkdir -p _site
        cp -r "$JAVADOC_DIR"/* _site/
        
        echo "✅ Javadoc prête pour le déploiement dans _site/"
    
    - name: � Upload artifact pour GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site'

  # Job de déploiement
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: 🚀 Déployer sur GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: ✅ Publication réussie
      run: |
        echo "✅ Javadoc publiée avec succès !"
        echo "📖 Accessible à : ${{ steps.deployment.outputs.page_url }}"
