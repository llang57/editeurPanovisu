<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>fr.panovisu</groupId>
    <artifactId>editeurPanovisu</artifactId>
    <version>3.3.3-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>editeurPanovisu</name>
    <description>Éditeur de visites virtuelles panoramiques - Java 25</description>
    <url>https://github.com/llang57/editeurPanovisu</url>

    <properties>
        <!-- Versions -->
        <java.version>25</java.version>
        <javafx.version>19.0.2.1</javafx.version>
        <jfxtras.version>17-r1</jfxtras.version>
        <javalin.version>6.3.0</javalin.version>
        
        <!-- Dépendances existantes mises à jour -->
        <commons.imaging.version>1.0.0-alpha5</commons.imaging.version>
        <thumbnailator.version>0.4.20</thumbnailator.version>
        <metadata.extractor.version>2.19.0</metadata.extractor.version>
        <xmp.core.version>6.1.11</xmp.core.version>
        
        <!-- Utilitaires -->
        <slf4j.version>2.0.16</slf4j.version>
        <logback.version>1.5.11</logback.version>
        <junit.version>5.11.3</junit.version>
        
        <!-- Configuration Maven -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        
        <!-- Build Number Increment - Désactivé par défaut sur CI -->
        <skip.build.increment>false</skip.build.increment>
    </properties>

    <dependencies>
        <!-- JavaFX (modules principaux) -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        
        <!-- JavaFX natives multi-plateformes (Linux et Windows) sont ajoutés uniquement pour le packaging via le profil 'portable' -->

        <!-- Gluon Maps - DÉSACTIVÉ (crashs sur Desktop avec cache)
        <dependency>
            <groupId>com.gluonhq</groupId>
            <artifactId>maps</artifactId>
            <version>2.0.0-ea+6</version>
        </dependency>
        -->
        
        <!-- JMapViewer - Cartes OpenStreetMap pour Java Desktop
             Utilisation du JAR local car non disponible sur Maven Central
        -->
        <dependency>
            <groupId>org.openstreetmap.jmapviewer</groupId>
            <artifactId>jmapviewer</artifactId>
            <version>2.18</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/jmapviewer-2.18.jar</systemPath>
        </dependency>

        <!-- JFXtras - Composants JavaFX additionnels -->
        <dependency>
            <groupId>org.jfxtras</groupId>
            <artifactId>jfxtras-controls</artifactId>
            <version>${jfxtras.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jfxtras</groupId>
            <artifactId>jfxtras-common</artifactId>
            <version>${jfxtras.version}</version>
        </dependency>
        <!-- Note: jfxtras-labs n'est plus disponible pour Java 17+
             BigDecimalField sera remplacé par une classe custom -->
        <!--
        <dependency>
            <groupId>org.jfxtras</groupId>
            <artifactId>jfxtras-labs</artifactId>
            <version>${jfxtras.version}</version>
        </dependency>
        -->

        <!-- Serveur HTTP embarqué -->
        <dependency>
            <groupId>io.javalin</groupId>
            <artifactId>javalin</artifactId>
            <version>${javalin.version}</version>
        </dependency>

        <!-- Logging (requis par Javalin) -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <!-- Traitement d'images -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-imaging</artifactId>
            <version>${commons.imaging.version}</version>
        </dependency>
        <dependency>
            <groupId>net.coobird</groupId>
            <artifactId>thumbnailator</artifactId>
            <version>${thumbnailator.version}</version>
        </dependency>

        <!-- Métadonnées d'images -->
        <dependency>
            <groupId>com.drewnoakes</groupId>
            <artifactId>metadata-extractor</artifactId>
            <version>${metadata.extractor.version}</version>
        </dependency>
        <dependency>
            <groupId>com.adobe.xmp</groupId>
            <artifactId>xmpcore</artifactId>
            <version>${xmp.core.version}</version>
        </dependency>

        <!-- Apache Batik - Rendu SVG -->
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-transcoder</artifactId>
            <version>1.17</version>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-codec</artifactId>
            <version>1.17</version>
        </dependency>
        <!-- Xerces est requis par Batik pour le parsing XML/SVG -->
        <dependency>
            <groupId>xerces</groupId>
            <artifactId>xercesImpl</artifactId>
            <version>2.12.2</version>
        </dependency>

        <!-- Markdown Parser -->
        <dependency>
            <groupId>org.commonmark</groupId>
            <artifactId>commonmark</artifactId>
            <version>0.22.0</version>
        </dependency>
        <!-- Extensions Markdown (tables, strikethrough, etc.) -->
        <dependency>
            <groupId>org.commonmark</groupId>
            <artifactId>commonmark-ext-gfm-tables</artifactId>
            <version>0.22.0</version>
        </dependency>
        <dependency>
            <groupId>org.commonmark</groupId>
            <artifactId>commonmark-ext-gfm-strikethrough</artifactId>
            <version>0.22.0</version>
        </dependency>

        <!-- AtlantaFX - Thèmes modernes JavaFX -->
        <dependency>
            <groupId>io.github.mkpaz</groupId>
            <artifactId>atlantafx-base</artifactId>
            <version>2.0.1</version>
        </dependency>

        <!-- MaterialFX - Composants Material Design - TEST OK ✅ -->
        <dependency>
            <groupId>io.github.palexdev</groupId>
            <artifactId>materialfx</artifactId>
            <version>11.17.0</version>
        </dependency>

        <!-- FlatLaf - Thèmes modernes plats - TEST OK ✅ -->
        <dependency>
            <groupId>com.formdev</groupId>
            <artifactId>flatlaf</artifactId>
            <version>3.6.2</version>
        </dependency>

        <!-- JOCL - Java Bindings for OpenCL (Accélération GPU) -->
        <dependency>
            <groupId>org.jocl</groupId>
            <artifactId>jocl</artifactId>
            <version>2.0.5</version>
        </dependency>

        <!-- Tests -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src</sourceDirectory>
        <resources>
            <resource>
                <directory>aide</directory>
                <targetPath>aide</targetPath>
            </resource>
            <resource>
                <directory>configPV</directory>
                <targetPath>configPV</targetPath>
            </resource>
            <resource>
                <directory>css</directory>
                <targetPath>css</targetPath>
            </resource>
            <resource>
                <directory>diaporama</directory>
                <targetPath>diaporama</targetPath>
            </resource>
            <resource>
                <directory>images</directory>
                <targetPath>images</targetPath>
            </resource>
            <resource>
                <directory>pagesHTML</directory>
                <targetPath>pagesHTML</targetPath>
            </resource>
            <resource>
                <directory>templates</directory>
                <targetPath>templates</targetPath>
            </resource>
            <resource>
                <directory>theme</directory>
                <targetPath>theme</targetPath>
            </resource>
            <resource>
                <directory>src</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.fxml</include>
                    <include>**/*.xml</include>
                    <include>**/*.html</include>
                    <include>**/*.css</include>
                    <include>**/*.js</include>
                    <include>**/*.png</include>
                    <include>**/*.jpg</include>
                    <include>**/*.gif</include>
                    <include>**/*.md</include>
                    <include>**/*.ttf</include>
                    <include>**/*.cl</include>
                </includes>
            </resource>
            <!-- Documentation Markdown -->
            <resource>
                <directory>doc</directory>
                <targetPath>doc</targetPath>
                <includes>
                    <include>**/*.md</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <!-- Build Number Incrementer - Désactivé sur CI (GitHub Actions) -->
            <!-- Plugin exec-maven-plugin déplacé dans les profils OS-spécifiques -->

            <!-- Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <compilerArgs>
                        <arg>--enable-preview</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!-- JavaFX Plugin -->
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <mainClass>editeurpanovisu.EditeurPanovisu</mainClass>
                    <options>
                        <option>--enable-preview</option>
                    </options>
                </configuration>
            </plugin>

            <!-- JAR avec dépendances -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <!-- Ne pas créer de JAR séparé avec suffixe -shaded -->
                            <shadedArtifactAttached>false</shadedArtifactAttached>
                            <!-- Remplacer le JAR original par le JAR shaded -->
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>editeurpanovisu.Launcher</mainClass>
                                    <manifestEntries>
                                        <Implementation-Title>${project.name}</Implementation-Title>
                                        <Implementation-Version>3.0</Implementation-Version>
                                        <Implementation-Vendor>Laurent LANG</Implementation-Vendor>
                                        <Built-By>Maven</Built-By>
                                    </manifestEntries>
                                </transformer>
                            </transformers>
                            <filters>
                                <!-- Exclure les signatures des dépendances externes uniquement -->
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- JAR Plugin - Configuration du MANIFEST -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.4.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>editeurpanovisu.Launcher</mainClass>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Implementation-Title>${project.name}</Implementation-Title>
                            <Implementation-Version>3.0</Implementation-Version>
                            <Implementation-Vendor>Laurent LANG</Implementation-Vendor>
                            <Built-By>Maven ${maven.build.timestamp}</Built-By>
                            <Created-By>Java ${java.version}</Created-By>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <!-- Tests JUnit 5 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.2</version>
                <configuration>
                    <argLine>--enable-preview</argLine>
                </configuration>
            </plugin>

            <!-- Nettoyage et préparation répertoire jpackage -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>prepare-jpackage-input</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- Supprimer le JAR original créé par shade -->
                                <delete file="${project.build.directory}/original-${project.build.finalName}.jar" 
                                        failonerror="false"/>
                                
                                <!-- Créer répertoire app-input pour jpackage -->
                                <delete dir="${project.build.directory}/app-input" failonerror="false"/>
                                <mkdir dir="${project.build.directory}/app-input"/>
                                
                                <!-- Copier uniquement le JAR shaded -->
                                <copy file="${project.build.directory}/${project.build.finalName}.jar"
                                      todir="${project.build.directory}/app-input"/>
                                
                                <!-- Copier les ressources nécessaires depuis classes -->
                                <copy todir="${project.build.directory}/app-input">
                                    <fileset dir="${project.build.directory}/classes">
                                        <include name="diaporama/**"/>
                                        <include name="aide/**"/>
                                        <include name="images/**"/>
                                        <include name="css/**"/>
                                        <include name="configPV/**"/>
                                        <include name="pagesHTML/**"/>
                                        <include name="templates/**"/>
                                        <include name="theme/**"/>
                                    </fileset>
                                </copy>
                                
                                <!-- Copier panovisu depuis la racine du projet -->
                                <copy todir="${project.build.directory}/app-input/panovisu">
                                    <fileset dir="${project.basedir}/panovisu">
                                        <include name="**/*"/>
                                    </fileset>
                                </copy>
                                
                                <!-- Copier le batch launcher et le VBS depuis la racine du projet -->
                                <!-- Ces fichiers seront dans app/ après installation -->
                                <copy file="${project.basedir}/Lancer_EditeurPanovisu.bat"
                                      todir="${project.build.directory}/app-input"/>
                                <copy file="${project.basedir}/Lancer_EditeurPanovisu.vbs"
                                      todir="${project.build.directory}/app-input"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- JPackage pour distributions natives Windows -->
            <plugin>
                <groupId>org.panteleyev</groupId>
                <artifactId>jpackage-maven-plugin</artifactId>
                <version>1.6.5</version>
                <configuration>
                    <!-- Informations de base -->
                    <name>EditeurPanovisu</name>
                    <appVersion>2.0.0</appVersion>
                    <vendor>PanoVisu - Laurent LANG</vendor>
                    <copyright>Copyright © 2025 PanoVisu</copyright>
                    <description>Éditeur de visites virtuelles panoramiques</description>
                    
                    <!-- Dossier de sortie -->
                    <destination>target/dist</destination>
                    
                    <!-- Type de package (MSI pour Windows) -->
                    <type>MSI</type>
                    
                    <!-- Chemin vers le JAR avec dépendances et ressources -->
                    <input>target/app-input</input>
                    <mainJar>editeurPanovisu-3.3.2-SNAPSHOT.jar</mainJar>
                    <mainClass>editeurpanovisu.Launcher</mainClass>
                    
                    <!-- Utiliser le runtime Java complet au lieu de jlink -->
                    <runtimeImage>${java.home}</runtimeImage>
                    
                    <!-- Options Java -->
                    <javaOptions>
                        <option>-Dfile.encoding=UTF-8</option>
                        <option>--enable-preview</option>
                        <option>--enable-native-access=ALL-UNNAMED</option>
                        <option>-Xms512m</option>
                        <option>-Xmx2048m</option>
                    </javaOptions>
                    
                    <!-- Configuration Windows -->
                    <icon>images/panovisu.ico</icon>
                    <winMenu>true</winMenu>
                    <winShortcut>true</winShortcut>
                    <winDirChooser>true</winDirChooser>
                    <!-- Installation par utilisateur dans AppData (pas Program Files protégé) -->
                    <winPerUserInstall>true</winPerUserInstall>
                    <winMenuGroup>PanoVisu</winMenuGroup>
                    
                    <!-- Verbose pour debug -->
                    <verbose>true</verbose>
                </configuration>
            </plugin>

            <!-- Plugin d'analyse des dépendances avec compatibilité Java 21/25 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.7.1</version>
                <configuration>
                    <!-- Ignorer les erreurs de bytecode incompatibles -->
                    <ignoreMissingClasses>true</ignoreMissingClasses>
                    <failOnWarning>false</failOnWarning>
                    <skip>false</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- Profils Maven pour gérer les natives multi-plateformes -->
    <profiles>
        <!-- Profil portable : ajoute les natives Linux et Windows pour archives portables -->
        <profile>
            <id>portable</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <dependencies>
                <!-- JavaFX natives Linux pour archive portable -->
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-graphics</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>linux</classifier>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-media</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>linux</classifier>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-web</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>linux</classifier>
                </dependency>

                <!-- JavaFX natives Windows pour archive portable -->
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-graphics</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>win</classifier>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-media</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>win</classifier>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-web</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>win</classifier>
                </dependency>
            </dependencies>
        </profile>
        
        <!-- Profil Windows : utilise PowerShell -->
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.1</version>
                        <executions>
                            <execution>
                                <id>increment-build-number</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <skip>${skip.build.increment}</skip>
                                    <executable>powershell</executable>
                                    <arguments>
                                        <argument>-ExecutionPolicy</argument>
                                        <argument>Bypass</argument>
                                        <argument>-File</argument>
                                        <argument>${project.basedir}/increment-build.ps1</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- Profil Unix/Linux : utilise Bash -->
        <profile>
            <id>unix</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.1</version>
                        <executions>
                            <execution>
                                <id>increment-build-number</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <skip>${skip.build.increment}</skip>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>${project.basedir}/increment-build.sh</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profil CI pour éviter les problèmes de compatibilité Java -->
        <profile>
            <id>ci-safe</id>
            <properties>
                <maven.dependency.analyze.skip>true</maven.dependency.analyze.skip>
            </properties>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
        <repository>
            <id>JOSM</id>
            <name>JOSM OpenStreetMap Repository</name>
            <url>https://josm.openstreetmap.de/repository/releases/</url>
        </repository>
    </repositories>
</project>
