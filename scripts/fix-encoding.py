#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script pour corriger les probl√®mes d'encodage dans les fichiers Java
Remplace les caract√®res mal encod√©s par leurs √©quivalents UTF-8
"""

import os
import sys

def fix_encoding(filepath):
    """Corrige l'encodage d'un fichier"""
    
    # Dictionnaire des corrections (minuscules)
    corrections = {
        '√É¬©': '√©',    # e accent aigu
        '√É¬®': '√®',    # e accent grave
        '√É¬™': '√™',    # e accent circonflexe
        '√É ': '√†',    # a accent grave
        '√É¬¢': '√¢',    # a accent circonflexe
        '√É¬ß': '√ß',    # c c√©dille
        '√É¬Æ': '√Æ',    # i accent circonflexe
        '√É¬Ø': '√Ø',    # i tr√©ma
        '√É¬¥': '√¥',    # o accent circonflexe
        '√É¬π': '√π',    # u accent grave
        '√É¬ª': '√ª',    # u accent circonflexe
        '√É¬º': '√º',    # u tr√©ma
        '√É¬´': '√´',    # e tr√©ma
        # Majuscules
        '√É‚Ä∞': '√â',    # E accent aigu
        '√ÉÀÜ': '√à',    # E accent grave
        '√É≈†': '√ä',    # E accent circonflexe
        '√É‚Ç¨': '√Ä',    # A accent grave
        '√É‚Äö': '√Ç',    # A accent circonflexe
        '√É‚Ä°': '√á',    # C c√©dille
        '√É≈Ω': '√é',    # I accent circonflexe
        '√É"': '√î',    # O accent circonflexe
        '√É‚Ñ¢': '√ô',    # U accent grave
        '√É‚Ä∫': '√õ',    # U accent circonflexe
        '√É‚Äπ': '√ã',    # E tr√©ma
        '√É': '√è',    # I tr√©ma
        '√É≈ì': '√ú',    # U tr√©ma
        # Cas sp√©ciaux d'encodage double
        '√è ': '√† ',   # √† suivi d'espace (encod√© deux fois)
        '√Ç¬∞': '¬∞',    # degr√©
        '√¢‚Ç¨‚Ñ¢': "'",   # apostrophe
        '√¢‚Ç¨≈ì': '"',   # guillemet ouvrant
        '√¢‚Ç¨': '"',   # guillemet fermant
        '√¢‚Ç¨"': '‚Äî',   # tiret cadratin
        '√¢‚Ç¨"': '‚Äì',   # tiret demi-cadratin
        '√¢‚Ç¨¬¶': '‚Ä¶',   # points de suspension
    }
    
    # Lire le fichier
    try:
        with open(filepath, 'r', encoding='utf-8') as f:
            contenu = f.read()
    except Exception as e:
        print(f"‚ùå Erreur lors de la lecture de {filepath}: {e}")
        return False
    
    # Appliquer les corrections
    contenu_original = contenu
    nb_corrections = 0
    
    for mauvais, bon in corrections.items():
        if mauvais in contenu:
            occurrences = contenu.count(mauvais)
            print(f"   Correction de '{mauvais}' ‚Üí '{bon}' ({occurrences} occurrence(s))")
            contenu = contenu.replace(mauvais, bon)
            nb_corrections += occurrences
    
    # Sauvegarder si des modifications ont √©t√© faites
    if contenu != contenu_original:
        try:
            with open(filepath, 'w', encoding='utf-8') as f:
                f.write(contenu)
            print(f"\n‚úÖ {nb_corrections} corrections effectu√©es dans {filepath}")
            return True
        except Exception as e:
            print(f"‚ùå Erreur lors de l'√©criture de {filepath}: {e}")
            return False
    else:
        print(f"‚úÖ Aucun probl√®me d'encodage d√©tect√© dans {filepath}")
        return True

def main():
    print("üîç Recherche des probl√®mes d'encodage...\n")
    
    # Scanner tous les fichiers Java
    fichiers = []
    for root, dirs, files in os.walk("src"):
        for file in files:
            if file.endswith(".java"):
                fichiers.append(os.path.join(root, file))
    
    succes = True
    for fichier in fichiers:
        if os.path.exists(fichier):
            print(f"üìù Traitement de {fichier}...")
            if not fix_encoding(fichier):
                succes = False
            print()
        else:
            print(f"‚ö†Ô∏è  Fichier non trouv√©: {fichier}\n")
    
    if succes:
        print("‚úÖ Tous les fichiers ont √©t√© trait√©s avec succ√®s !")
        return 0
    else:
        print("‚ùå Des erreurs se sont produites")
        return 1

if __name__ == "__main__":
    sys.exit(main())
